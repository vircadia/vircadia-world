services:
  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_EXTENSIONS: ${POSTGRES_EXTENSIONS}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - vircadia_world_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgrest:
    image: postgrest/postgrest:latest
    container_name: ${POSTGRES_CONTAINER_NAME}_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: ${POSTGRES_USER}  # For development. In production, create a separate anon role
      PGRST_SERVER_PORT: ${POSTGRES_API_PORT}
      PGRST_JWT_SECRET: ${POSTGRES_JWT_SECRET}  # Required for authentication
      PGRST_DB_POOL: 10
    ports:
      - "${POSTGRES_API_PORT}:3000"
    user: root
    entrypoint: >
      /bin/sh -c "
      apt-get update &&
      apt-get install -y curl &&
      /bin/postgrest"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${POSTGRES_API_PORT}/"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  vircadia_world_postgres_data:
